{"version":3,"file":"ng2-ui-auth.js.map","sources":["ng://ng2-ui-auth/storage-type.enum.ts","ng://ng2-ui-auth/config.service.ts","ng://ng2-ui-auth/storage.service.ts","ng://ng2-ui-auth/shared.service.ts","ng://ng2-ui-auth/utils.ts","ng://ng2-ui-auth/popup.service.ts","ng://ng2-ui-auth/oauth1.service.ts","ng://ng2-ui-auth/oauth2.service.ts","ng://ng2-ui-auth/oauth.service.ts","ng://ng2-ui-auth/local.service.ts","ng://ng2-ui-auth/auth.service.ts","ng://ng2-ui-auth/interceptor.service.ts","ng://ng2-ui-auth/ng2-ui-auth.module.ts"],"sourcesContent":["// ngc (Tsickle) doesn't support typescript 2.4 string enums in libraries yet, using consts as a workarount\r\nexport const NONE = 'none';\r\nexport const MEMORY = 'memory';\r\nexport const LOCAL_STORAGE = 'localStorage';\r\nexport const SESSION_STORAGE = 'sessionStorage';\r\nexport const COOKIE = 'cookie';\r\nexport const SESSION_COOKIE = 'sessionCookie';\r\n\r\nexport type StorageType = typeof NONE | typeof MEMORY\r\n    | typeof LOCAL_STORAGE | typeof SESSION_STORAGE\r\n    | typeof COOKIE | typeof SESSION_COOKIE;\r\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\r\nimport { StorageType, LOCAL_STORAGE } from './storage-type.enum';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\nexport const CONFIG_OPTIONS = new InjectionToken<any>('config.options');\r\n\r\nexport interface IPopupOptions {\r\n    width?: number;\r\n    height?: number;\r\n    left?: number;\r\n    top?: number;\r\n    visibleToolbar?: boolean;\r\n}\r\n\r\nexport interface IOauth1Options {\r\n    url?: string;\r\n    name?: string;\r\n    redirectUri?: string;\r\n    popupOptions?: IPopupOptions;\r\n    authorizationEndpoint?: string;\r\n    oauthType?: '1.0';\r\n    method?: string;\r\n}\r\n\r\nexport interface IOauth2Options {\r\n    url?: string;\r\n    name?: string;\r\n    redirectUri?: string;\r\n    popupOptions?: IPopupOptions;\r\n    authorizationEndpoint?: string;\r\n    oauthType?: '2.0';\r\n    method?: string;\r\n    responseType?: string;\r\n    clientId?: string;\r\n    additionalUrlParams?: {\r\n        [paramName: string]: string | (() => string) | null | undefined;\r\n    };\r\n    scopeDelimiter?: string;\r\n    scope?: string[];\r\n    state?: string | (() => string);\r\n}\r\n\r\nexport interface IProviders {\r\n    [provider: string]: IOauth2Options | IOauth1Options;\r\n}\r\n\r\nexport interface IConfigOptions {\r\n    tokenRoot: string | null;\r\n    cordova: boolean | null;\r\n    baseUrl: string;\r\n    loginUrl: string;\r\n    signupUrl: string;\r\n    unlinkUrl: string;\r\n    tokenName: string;\r\n    tokenSeparator: string;\r\n    tokenPrefix: string;\r\n    authToken: string;\r\n    authHeader: string;\r\n    storageType: StorageType;\r\n    providers: IProviders;\r\n    withCredentials: boolean;\r\n    resolveToken: (response: any, config: IConfigOptions) => string;\r\n}\r\n\r\nexport interface IPartialConfigOptions { // = Partial<IConfigOptions\r\n    tokenRoot?: string | null;\r\n    cordova?: boolean | null;\r\n    baseUrl?: string;\r\n    loginUrl?: string;\r\n    signupUrl?: string;\r\n    unlinkUrl?: string;\r\n    tokenName?: string;\r\n    tokenSeparator?: string;\r\n    tokenPrefix?: string;\r\n    authToken?: string;\r\n    authHeader?: string;\r\n    storageType?: StorageType;\r\n    providers?: IProviders;\r\n    withCredentials?: boolean;\r\n    resolveToken?: (response: any, config: IConfigOptions) => string;\r\n}\r\n\r\nexport const defaultOptions: IConfigOptions = {\r\n    withCredentials: false,\r\n    tokenRoot: null,\r\n    baseUrl: '/',\r\n    loginUrl: '/auth/login',\r\n    signupUrl: '/auth/signup',\r\n    unlinkUrl: '/auth/unlink/',\r\n    tokenName: 'token',\r\n    tokenSeparator: '_',\r\n    tokenPrefix: 'ng2-ui-auth',\r\n    authHeader: 'Authorization',\r\n    authToken: 'Bearer',\r\n    storageType: LOCAL_STORAGE,\r\n    cordova: null,\r\n    resolveToken: (response: any, config: IConfigOptions) => {\r\n        const accessToken: string | { [key: string]: string } | null | undefined = response &&\r\n            (response.access_token || response.token || response.data);\r\n        if (!accessToken) {\r\n            // console.warn('No token found');\r\n            return null;\r\n        }\r\n        if (typeof accessToken === 'string') {\r\n            return accessToken;\r\n        }\r\n        if (typeof accessToken !== 'object') {\r\n            // console.warn('No token found');\r\n            return null;\r\n        }\r\n        const tokenRootData = config.tokenRoot && config.tokenRoot\r\n            .split('.')\r\n            .reduce(\r\n            (o: any, x: any) => {\r\n                return o[x];\r\n            },\r\n            accessToken);\r\n        const token = tokenRootData ? tokenRootData[config.tokenName] : accessToken[config.tokenName];\r\n        if (token) {\r\n            return token;\r\n        }\r\n        // const tokenPath = this.tokenRoot ? this.tokenRoot + '.' + this.tokenName : this.tokenName;\r\n        // console.warn('Expecting a token named \"' + tokenPath);\r\n        return null;\r\n    },\r\n    providers: {\r\n        facebook: {\r\n            name: 'facebook',\r\n            url: '/auth/facebook',\r\n            authorizationEndpoint: 'https://www.facebook.com/v2.5/dialog/oauth',\r\n            additionalUrlParams: {\r\n                display: 'popup',\r\n            },\r\n            scope: ['email'],\r\n            scopeDelimiter: ',',\r\n            oauthType: '2.0',\r\n            popupOptions: { width: 580, height: 400 },\r\n        },\r\n        google: {\r\n            name: 'google',\r\n            url: '/auth/google',\r\n            authorizationEndpoint: 'https://accounts.google.com/o/oauth2/auth',\r\n            additionalUrlParams: {\r\n                'display': 'popup',\r\n                'prompt': undefined,\r\n                'login_hint': undefined,\r\n                'access_type': undefined,\r\n                'include_granted_scopes': undefined,\r\n                'openid.realm': undefined,\r\n                'hd': undefined,\r\n            },\r\n            scope: ['openid', 'profile', 'email'],\r\n            scopeDelimiter: ' ',\r\n            oauthType: '2.0',\r\n            popupOptions: { width: 452, height: 633 },\r\n            state: () => encodeURIComponent(Math.random().toString(36).substr(2)),\r\n        },\r\n        github: {\r\n            name: 'github',\r\n            url: '/auth/github',\r\n            authorizationEndpoint: 'https://github.com/login/oauth/authorize',\r\n            scope: ['user:email'],\r\n            scopeDelimiter: ' ',\r\n            oauthType: '2.0',\r\n            popupOptions: { width: 1020, height: 618 },\r\n        },\r\n        instagram: {\r\n            name: 'instagram',\r\n            url: '/auth/instagram',\r\n            authorizationEndpoint: 'https://api.instagram.com/oauth/authorize',\r\n            scope: ['basic'],\r\n            scopeDelimiter: '+',\r\n            oauthType: '2.0',\r\n        },\r\n        linkedin: {\r\n            name: 'linkedin',\r\n            url: '/auth/linkedin',\r\n            authorizationEndpoint: 'https://www.linkedin.com/uas/oauth2/authorization',\r\n            scope: ['r_emailaddress'],\r\n            scopeDelimiter: ' ',\r\n            oauthType: '2.0',\r\n            popupOptions: { width: 527, height: 582 },\r\n            state: 'STATE',\r\n        },\r\n        twitter: {\r\n            name: 'twitter',\r\n            url: '/auth/twitter',\r\n            authorizationEndpoint: 'https://api.twitter.com/oauth/authenticate',\r\n            oauthType: '1.0',\r\n            popupOptions: { width: 495, height: 645 },\r\n        },\r\n        twitch: {\r\n            name: 'twitch',\r\n            url: '/auth/twitch',\r\n            authorizationEndpoint: 'https://api.twitch.tv/kraken/oauth2/authorize',\r\n            scope: ['user_read'],\r\n            scopeDelimiter: ' ',\r\n            additionalUrlParams: {\r\n                display: 'popup',\r\n            },\r\n            oauthType: '2.0',\r\n            popupOptions: { width: 500, height: 560 },\r\n        },\r\n        live: {\r\n            name: 'live',\r\n            url: '/auth/live',\r\n            authorizationEndpoint: 'https://login.live.com/oauth20_authorize.srf',\r\n            additionalUrlParams: {\r\n                display: 'popup',\r\n            },\r\n            scope: ['wl.emails'],\r\n            scopeDelimiter: ' ',\r\n            oauthType: '2.0',\r\n            popupOptions: { width: 500, height: 560 },\r\n        },\r\n        yahoo: {\r\n            name: 'yahoo',\r\n            url: '/auth/yahoo',\r\n            authorizationEndpoint: 'https://api.login.yahoo.com/oauth2/request_auth',\r\n            scope: [],\r\n            scopeDelimiter: ',',\r\n            oauthType: '2.0',\r\n            popupOptions: { width: 559, height: 519 },\r\n        },\r\n        bitbucket: {\r\n            name: 'bitbucket',\r\n            url: '/auth/bitbucket',\r\n            authorizationEndpoint: 'https://bitbucket.org/site/oauth2/authorize',\r\n            scope: ['email'],\r\n            scopeDelimiter: ',',\r\n            oauthType: '2.0',\r\n            popupOptions: { width: 1028, height: 529 },\r\n        },\r\n        spotify: {\r\n            name: 'spotify',\r\n            url: '/auth/spotify',\r\n            authorizationEndpoint: 'https://accounts.spotify.com/authorize',\r\n            scope: ['', 'user-read-email'],\r\n            scopeDelimiter: ',',\r\n            oauthType: '2.0',\r\n            popupOptions: { width: 500, height: 530 },\r\n            state: () => encodeURIComponent(Math.random().toString(36).substr(2)),\r\n        },\r\n    },\r\n};\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n    public options: IConfigOptions;\r\n\r\n    constructor(@Inject(CONFIG_OPTIONS) options: IPartialConfigOptions) {\r\n        this.options = {\r\n            ...defaultOptions,\r\n            ...options,\r\n            providers: {\r\n                ...options.providers,\r\n                ...Object\r\n                    .keys(defaultOptions.providers)\r\n                    .concat(Object.keys(options.providers || {}))\r\n                    .map((key) => options.providers && options.providers[key]\r\n                        ? { [key]: { ...defaultOptions.providers[key], ...options.providers[key] } }\r\n                        : { [key]: defaultOptions.providers[key] })\r\n                    .reduce((acc, next) => ({ ...acc, ...next }), {}),\r\n            },\r\n        } as IConfigOptions;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from './config.service';\r\nimport { StorageType, MEMORY, COOKIE, SESSION_COOKIE, LOCAL_STORAGE, SESSION_STORAGE, NONE } from './storage-type.enum';\r\n\r\nexport abstract class StorageService {\r\n    abstract updateStorageType(storageType: StorageType): boolean;\r\n\r\n    abstract get(key: string): string;\r\n\r\n    abstract set(key: string, value: string, date: string): void;\r\n\r\n    abstract remove(key: string): void;\r\n}\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n@Injectable()\r\nexport class BrowserStorageService extends StorageService {\r\n    private store: { [key: string]: string } = {};\r\n    private storageType: StorageType = MEMORY;\r\n\r\n    constructor(private config: ConfigService) {\r\n        super();\r\n        if (!this.updateStorageType(config.options.storageType)) {\r\n            console.warn(config.options.storageType + ' is not available.');\r\n        }\r\n    }\r\n\r\n    public updateStorageType(storageType: StorageType) {\r\n        const isStorageAvailable = this.checkIsStorageAvailable(storageType);\r\n        if (!isStorageAvailable) {\r\n            return false;\r\n        }\r\n        this.storageType = storageType;\r\n        return true;\r\n    }\r\n\r\n    public get(key: string) {\r\n        switch (this.storageType) {\r\n            case COOKIE:\r\n            case SESSION_COOKIE:\r\n                return this.getCookie(key);\r\n            case LOCAL_STORAGE:\r\n            case SESSION_STORAGE:\r\n                return window[this.storageType].getItem(key);\r\n            case MEMORY:\r\n                return this.store[key];\r\n            case NONE:\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    public set(key: string, value: string, date: string) {\r\n        switch (this.storageType) {\r\n            case COOKIE:\r\n            case SESSION_COOKIE:\r\n                this.setCookie(key, value, this.storageType === COOKIE ? date : '');\r\n                break;\r\n            case LOCAL_STORAGE:\r\n            case SESSION_STORAGE:\r\n                window[this.storageType].setItem(key, value);\r\n                break;\r\n            case MEMORY:\r\n                this.store[key] = value;\r\n                break;\r\n            case NONE:\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public remove(key: string) {\r\n        switch (this.storageType) {\r\n            case COOKIE:\r\n            case SESSION_COOKIE:\r\n                this.removeCookie(key);\r\n                break;\r\n            case LOCAL_STORAGE:\r\n            case SESSION_STORAGE:\r\n                window[this.storageType].removeItem(key);\r\n                break;\r\n            case MEMORY:\r\n                delete this.store[key];\r\n                break;\r\n            case NONE:\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private checkIsStorageAvailable(storageType: StorageType) {\r\n        switch (storageType) {\r\n            case COOKIE:\r\n            case SESSION_COOKIE:\r\n                return this.isCookieStorageAvailable();\r\n            case LOCAL_STORAGE:\r\n            case SESSION_STORAGE:\r\n                return this.isWindowStorageAvailable(storageType);\r\n            case NONE:\r\n            case MEMORY:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    private isWindowStorageAvailable(storageType: typeof SESSION_STORAGE | typeof LOCAL_STORAGE) {\r\n        try {\r\n            const supported = window && storageType in window && window[storageType] !== null;\r\n\r\n            if (supported) {\r\n                const key = Math.random().toString(36).substring(7);\r\n                window[storageType].setItem(key, '');\r\n                window[storageType].removeItem(key);\r\n            }\r\n\r\n            return supported;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private isCookieStorageAvailable() {\r\n        try {\r\n            const supported = document && 'cookie' in document;\r\n\r\n            if (supported) {\r\n                const key = Math.random().toString(36).substring(7);\r\n                this.setCookie(key, 'test', new Date(Date.now() + 60 * 1000).toUTCString());\r\n                const value = this.getCookie(key);\r\n                this.removeCookie(key);\r\n                return value === 'test';\r\n            }\r\n            return false;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private setCookie(key: string, value: string, expires = '', path = '/') {\r\n        document.cookie = `${key}=${value}${expires ? `; expires=${expires}` : ''}; path=${path}`;\r\n    }\r\n\r\n    private removeCookie(key: string, path = '/') {\r\n        this.setCookie(key, '', new Date(0).toUTCString(), path);\r\n    }\r\n\r\n    private getCookie(key: string) {\r\n        return document.cookie.replace(new RegExp(`(?:(?:^|.*;\\\\s*)${key}\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$`), '$1');\r\n    }\r\n}\r\n","/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from './config.service';\r\nimport { StorageService } from './storage.service';\r\nimport { StorageType } from './storage-type.enum';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\n@Injectable()\r\nexport class SharedService {\r\n    public tokenName = this.config.options.tokenPrefix\r\n        ? [this.config.options.tokenPrefix, this.config.options.tokenName].join(this.config.options.tokenSeparator)\r\n        : this.config.options.tokenName;\r\n\r\n    constructor(\r\n        private storage: StorageService,\r\n        private config: ConfigService) { }\r\n\r\n    public getToken() {\r\n        return this.storage.get(this.tokenName);\r\n    }\r\n\r\n    public getPayload(token = this.getToken()) {\r\n\r\n        if (token && token.split('.').length === 3) {\r\n            try {\r\n                const base64Url = token.split('.')[1];\r\n                const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n                return JSON.parse(this.b64DecodeUnicode(base64));\r\n            } catch (e) {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    public setToken(response: string | object) {\r\n        if (!response) {\r\n            // console.warn('Can\\'t set token without passing a value');\r\n            return;\r\n        }\r\n\r\n        let token: string;\r\n        if (typeof response === 'string') {\r\n            token = response;\r\n        } else {\r\n            token = this.config.options.resolveToken(response, this.config.options);\r\n        }\r\n\r\n        if (token) {\r\n            const expDate = this.getExpirationDate(token);\r\n            this.storage.set(this.tokenName, token, expDate ? expDate.toUTCString() : '');\r\n        }\r\n    }\r\n\r\n    public removeToken() {\r\n        this.storage.remove(this.tokenName);\r\n    }\r\n\r\n    public isAuthenticated(token = this.getToken()) {\r\n\r\n        // a token is present\r\n        if (token) {\r\n            // token with a valid JWT format XXX.YYY.ZZZ\r\n            if (token.split('.').length === 3) {\r\n                // could be a valid JWT or an access token with the same format\r\n                try {\r\n                    const base64Url = token.split('.')[1];\r\n                    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n                    const exp = JSON.parse(this.b64DecodeUnicode(base64)).exp;\r\n                    // jwt with an optional expiration claims\r\n                    if (exp) {\r\n                        const isExpired = Math.round(new Date().getTime() / 1000) >= exp;\r\n                        if (isExpired) {\r\n                            // fail: Expired token\r\n                            this.storage.remove(this.tokenName);\r\n                            return false;\r\n                        } else {\r\n                            // pass: Non-expired token\r\n                            return true;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    // pass: Non-JWT token that looks like JWT\r\n                    return true;\r\n                }\r\n            }\r\n            // pass: All other tokens\r\n            return true;\r\n        }\r\n        // lail: No token at all\r\n        return false;\r\n    }\r\n\r\n    public getExpirationDate(token = this.getToken()) {\r\n        const payload = this.getPayload(token);\r\n        if (payload && payload.exp && Math.round(new Date().getTime() / 1000) < payload.exp) {\r\n            const date = new Date(0);\r\n            date.setUTCSeconds(payload.exp);\r\n            return date;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public logout(): Observable<any> {\r\n        return Observable.create((observer: Subscriber<any>) => {\r\n            this.storage.remove(this.tokenName);\r\n            observer.next();\r\n            observer.complete();\r\n        });\r\n    }\r\n\r\n    public setStorageType(type: StorageType) {\r\n        return this.storage.updateStorageType(type);\r\n    }\r\n\r\n    private b64DecodeUnicode(str) {\r\n        return decodeURIComponent(\r\n            Array.prototype.map.call(atob(str),\r\n            c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2),\r\n        ).join(''));\r\n    }\r\n}\r\n","/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\nexport function joinUrl(baseUrl: string, url: string) {\r\n    if (/^(?:[a-z]+:)?\\/\\//i.test(url)) {\r\n        return url;\r\n    }\r\n\r\n    let joined = [baseUrl, url].join('/');\r\n\r\n    let normalize = function (str) {\r\n        return str\r\n            .replace(/[\\/]+/g, '/')\r\n            .replace(/\\/\\?/g, '?')\r\n            .replace(/\\/\\#/g, '#')\r\n            .replace(/\\:\\//g, '://');\r\n    };\r\n\r\n    return normalize(joined);\r\n}\r\n\r\nexport function deepMerge(obj1: object, obj2: object): any {\r\n    let result = {};\r\n    for (let i in obj1) {\r\n        if (obj1.hasOwnProperty(i)) {\r\n            if ((i in obj2) && (typeof obj1[i] === 'object') && (i !== null)) {\r\n                result[i] = deepMerge(obj1[i], obj2[i]);\r\n            } else {\r\n                result[i] = obj1[i];\r\n            }\r\n        }\r\n    }\r\n    for (let i in obj2) {\r\n        if (obj2.hasOwnProperty(i)) {\r\n            if (i in result) {\r\n                continue;\r\n            }\r\n            result[i] = obj2[i];\r\n        }\r\n\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function camelCase(name) {\r\n    return name.replace(/([\\:\\-\\_]+(.))/g, function(_, separator, letter, offset) {\r\n        return offset ? letter.toUpperCase() : letter;\r\n    });\r\n}\r\n\r\nexport function buildQueryString(obj: object) {\r\n    return Object\r\n        .keys(obj)\r\n        .map((key) => !!obj[key] ? `${encodeURIComponent(key)}=${encodeURIComponent(obj[key])}` : key)\r\n        .join('&');\r\n}\r\n\r\nexport function getWindowOrigin(w = window) {\r\n    try {\r\n        if (!w || !w.location) {\r\n            return null;\r\n        }\r\n        if (!w.location.origin) {\r\n            return `${w.location.protocol}//${w.location.hostname}${w.location.port ? ':' + w.location.port : ''}`;\r\n        }\r\n        return w.location.origin;\r\n    } catch (error) {\r\n        return null;\r\n        // ignore DOMException: Blocked a frame with origin from accessing a cross-origin frame.\r\n        // error instanceof DOMException && error.name === 'SecurityError'\r\n    }\r\n}\r\n\r\nexport function getFullUrlPath(location: HTMLAnchorElement|Location): string {\r\n    if (!location.protocol) {\r\n        let temp = document.createElement('a');\r\n\r\n        temp.href = location.href;\r\n\r\n        location = temp;\r\n    }\r\n\r\n    return location.protocol + '//' + location.hostname\r\n        + (location.port && location.port !== '80' && location.port !== '443' ? location.port : '') // Append the port only when it's not the default Port\r\n        + (/^\\//.test(location.pathname) ? location.pathname : '/' + location.pathname);\r\n}","import { getWindowOrigin, getFullUrlPath } from './utils';\r\nimport { Injectable } from '@angular/core';\r\nimport { EMPTY, fromEvent, interval, merge, Observable, of, throwError } from 'rxjs';\r\nimport { IPopupOptions, IOauth2Options, IOauth1Options } from './config.service';\r\nimport { switchMap, take, map, delay } from 'rxjs/operators';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\n@Injectable()\r\nexport class PopupService {\r\n    public open(url: string, options: IOauth2Options | IOauth1Options, cordova: boolean | null) {\r\n        const stringifiedOptions = this.stringifyOptions(this.prepareOptions(options.popupOptions));\r\n        const UA = window.navigator.userAgent;\r\n        cordova = cordova === null ? this.isCordovaApp() : cordova;\r\n        const windowName = cordova ? '_blank' : options.name;\r\n\r\n        const popupWindow = window.open(url, windowName, stringifiedOptions);\r\n\r\n        if (popupWindow && popupWindow.focus) {\r\n            popupWindow.focus();\r\n        }\r\n\r\n        return cordova\r\n            ? this.eventListener(popupWindow, options.redirectUri || getWindowOrigin())\r\n            : this.pollPopup(popupWindow, options.redirectUri || getWindowOrigin());\r\n    }\r\n\r\n    public eventListener(popupWindow: Window, redirectUri: string) {\r\n        if (!popupWindow) {\r\n            throw new Error('Popup was not created');\r\n        }\r\n        return merge(\r\n            fromEvent<Event>(popupWindow, 'exit').pipe(\r\n                delay(100),\r\n                map(() => { throw new Error('Authentication Canceled'); }),\r\n            ),\r\n            fromEvent(popupWindow, 'loadstart'),\r\n        ).pipe(\r\n            switchMap((event: Event & { url: string }) => {\r\n                if (!popupWindow || popupWindow.closed) {\r\n                    return Observable.throw(new Error('Authentication Canceled'));\r\n                }\r\n                if (event.url.indexOf(redirectUri) !== 0) {\r\n                    return EMPTY;\r\n                }\r\n\r\n                const parser = document.createElement('a');\r\n                parser.href = event.url;\r\n\r\n                if (parser.search || parser.hash) {\r\n                    const queryParams = parser.search.substring(1).replace(/\\/$/, '');\r\n                    const hashParams = parser.hash.substring(1).replace(/\\/$/, '');\r\n                    const hash = this.parseQueryString(hashParams);\r\n                    const qs = this.parseQueryString(queryParams);\r\n                    const allParams = { ...qs, ...hash };\r\n\r\n                    popupWindow.close();\r\n\r\n                    if (allParams.error) {\r\n                        throw allParams.error;\r\n                    } else {\r\n                        return of(allParams);\r\n                    }\r\n                }\r\n                return EMPTY;\r\n            }),\r\n            take(1),\r\n        );\r\n    }\r\n\r\n    pollPopup(popupWindow: Window, redirectUri: string) {\r\n        let redirectUriParser: HTMLAnchorElement = <HTMLAnchorElement>document.createElement('a');\r\n        redirectUriParser.href = redirectUri;\r\n\r\n        let redirectUriPath = getFullUrlPath(redirectUriParser);\r\n\r\n        return interval(50)\r\n            .pipe(\r\n            switchMap(() => {\r\n                if (!popupWindow || popupWindow.closed) {\r\n                    return throwError(new Error('Authentication Canceled'));\r\n                }\r\n\r\n                let popupWindowPath = '';\r\n                try {\r\n                    popupWindowPath  = getFullUrlPath(popupWindow.location);\r\n                } catch (error) {\r\n                    // ignore DOMException: Blocked a frame with origin from accessing a cross-origin frame.\r\n                    // error instanceof DOMException && error.name === 'SecurityError'\r\n                }\r\n                if (redirectUriPath === popupWindowPath) {\r\n                    if (popupWindow.location.search || popupWindow.location.hash) {\r\n                        const queryParams = popupWindow.location.search.substring(1).replace(/\\/$/, '');\r\n                        const hashParams = popupWindow.location.hash.substring(1).replace(/[\\/$]/, '');\r\n                        const hash = this.parseQueryString(hashParams);\r\n                        const qs = this.parseQueryString(queryParams);\r\n                        popupWindow.close();\r\n                        const allParams = { ...qs, ...hash };\r\n                        if (allParams.error) {\r\n                            throw allParams.error;\r\n                        } else {\r\n                            return of(allParams);\r\n                        }\r\n                    } else {\r\n                        return throwError(new Error('No token found after redirect'));\r\n                    }\r\n                }\r\n                return EMPTY;\r\n            }),\r\n            take(1),\r\n        );\r\n    }\r\n\r\n    private prepareOptions(options?: IPopupOptions) {\r\n        options = options || {};\r\n        const width = options.width || 500;\r\n        const height = options.height || 500;\r\n        return {\r\n            width,\r\n            height,\r\n            left: window.screenX + ((window.outerWidth - width) / 2),\r\n            top: window.screenY + ((window.outerHeight - height) / 2.5),\r\n            toolbar: options.visibleToolbar ? 'yes' : 'no',\r\n            ...options,\r\n        };\r\n    }\r\n\r\n    private stringifyOptions(options: { [index: string]: string | number | boolean | null | undefined }) {\r\n        return Object.keys(options)\r\n            .map((key) => options[key] === null || options[key] === undefined\r\n                ? key\r\n                : key + '=' + options[key],\r\n        ).join(',');\r\n    }\r\n\r\n    private parseQueryString(joinedKeyValue: string): any {\r\n        let key;\r\n        let value;\r\n        return joinedKeyValue.split('&').reduce(\r\n            (obj, keyValue) => {\r\n                if (keyValue) {\r\n                    value = keyValue.split('=');\r\n                    key = decodeURIComponent(value[0]);\r\n                    obj[key] = typeof value[1] !== 'undefined' ? decodeURIComponent(value[1]) : true;\r\n                }\r\n                return obj;\r\n            },\r\n            {} as { [k: string]: string | true });\r\n    }\r\n\r\n    private isCordovaApp() {\r\n        return !!(window && (\r\n            (window as any).cordova ||\r\n            window.navigator && window.navigator.userAgent && window.navigator.userAgent.indexOf('CriOS') > -1\r\n        ));\r\n    }\r\n}\r\n","import { IOauthService } from './oauth-service.interface';\r\nimport { Injectable } from '@angular/core';\r\nimport { PopupService } from './popup.service';\r\nimport { joinUrl, buildQueryString } from './utils';\r\nimport { ConfigService, IOauth1Options } from './config.service';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n@Injectable()\r\nexport class Oauth1Service implements IOauthService {\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private popup: PopupService,\r\n        private config: ConfigService,\r\n    ) { }\r\n\r\n    open<T extends object | string = any>(oauthOptions: IOauth1Options, userData: object): Observable<T> {\r\n        const serverUrl = this.config.options.baseUrl\r\n            ? joinUrl(this.config.options.baseUrl, oauthOptions.url)\r\n            : oauthOptions.url;\r\n\r\n        return this.http.post<object>(serverUrl, oauthOptions).pipe(\r\n            switchMap((authorizationData) => this.popup.open(\r\n                [oauthOptions.authorizationEndpoint, buildQueryString(authorizationData)].join('?'),\r\n                oauthOptions,\r\n                this.config.options.cordova,\r\n            ), (authorizationData, oauthData) => ({ authorizationData, oauthData })),\r\n            switchMap(({ authorizationData, oauthData }) => this.exchangeForToken<T>(oauthOptions, authorizationData, oauthData, userData)),\r\n        );\r\n    }\r\n\r\n    private exchangeForToken<T>(oauthOptions: IOauth1Options, authorizationData: object, oauthData: object, userData: object) {\r\n        const body = { authorizationData, oauthData, userData };\r\n        const { withCredentials, baseUrl } = this.config.options;\r\n        const { method = 'POST', url } = oauthOptions;\r\n        const exchangeForTokenUrl = baseUrl ? joinUrl(baseUrl, url) : url;\r\n        return this.http.request<T>(method, exchangeForTokenUrl, { body, withCredentials })\r\n    }\r\n}\r\n","import { IOauthService } from './oauth-service.interface';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { joinUrl, buildQueryString, getWindowOrigin } from './utils';\r\nimport { ConfigService, IOauth2Options } from './config.service';\r\nimport { PopupService } from './popup.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\n\r\n@Injectable()\r\nexport class Oauth2Service implements IOauthService {\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private popup: PopupService,\r\n        private config: ConfigService) {\r\n    }\r\n\r\n    open<T extends object | string = any>(oauthOptions: IOauth2Options, userData: object): Observable<T> {\r\n        const authorizationData = this.getAuthorizationData(oauthOptions);\r\n        const url = [oauthOptions.authorizationEndpoint, buildQueryString(authorizationData)].join('?');\r\n        return this.popup.open(url, oauthOptions, this.config.options.cordova).pipe(\r\n            switchMap((oauthData: any) => {\r\n                // when no server URL provided, return popup params as-is.\r\n                // this is for a scenario when someone wishes to opt out from\r\n                // satellizer's magic by doing authorization code exchange and\r\n                // saving a token manually.\r\n                if (oauthOptions.responseType === 'token' || !oauthOptions.url) {\r\n                    return of(oauthData);\r\n                }\r\n\r\n                if (oauthData.state && oauthData.state !== authorizationData.state) {\r\n                    throw new Error('OAuth \"state\" mismatch');\r\n                }\r\n                return this.exchangeForToken<T>(oauthOptions, authorizationData, oauthData, userData);\r\n            }),\r\n        );\r\n    }\r\n\r\n    private exchangeForToken<T>(options: IOauth2Options, authorizationData: object, oauthData: object, userData: object) {\r\n        const body = { authorizationData, oauthData, userData };\r\n        const { baseUrl, withCredentials } = this.config.options;\r\n        const { url, method = 'POST' } = options;\r\n        const exchangeForTokenUrl = baseUrl ? joinUrl(baseUrl, url) : url;\r\n        return this.http.request<T>(method, exchangeForTokenUrl, { body, withCredentials });\r\n    }\r\n\r\n    private getAuthorizationData(options: IOauth2Options) {\r\n        const {\r\n            responseType = 'code',\r\n            clientId,\r\n            redirectUri = getWindowOrigin() || '',\r\n            scopeDelimiter = ',',\r\n            scope,\r\n            state,\r\n            additionalUrlParams,\r\n        } = options;\r\n        const resolvedState = typeof state === 'function' ? state() : state;\r\n        return [\r\n            ['response_type', responseType],\r\n            ['client_id', clientId],\r\n            ['redirect_uri', redirectUri],\r\n            ...state ? [['state', resolvedState]] : [],\r\n            ...scope ? [['scope', scope.join(scopeDelimiter)]] : [],\r\n            ...additionalUrlParams\r\n                ? Object\r\n                    .keys(additionalUrlParams)\r\n                    .map((key) => {\r\n                        const value: string | (() => string) | null | undefined =\r\n                            (additionalUrlParams as any)[key];\r\n                        if (typeof value === 'string') {\r\n                            return [key, value];\r\n                        } else if (typeof value === 'function') {\r\n                            return [key, value()];\r\n                        } else if (value === null) {\r\n                            return [key, ''];\r\n                        }\r\n                        return ['', ''];\r\n                    })\r\n                : [],\r\n        ].filter((_) => !!_[0]).reduce((acc, next) => ({ ...acc, [next[0]]: next[1] }), {} as { [key: string]: string });\r\n    }\r\n}\r\n","import { IOauthService } from './oauth-service.interface';\r\nimport { PopupService } from './popup.service';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { Oauth1Service } from './oauth1.service';\r\nimport { Oauth2Service } from './oauth2.service';\r\nimport { SharedService } from './shared.service';\r\nimport { joinUrl } from './utils';\r\nimport { ConfigService } from './config.service';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\n@Injectable()\r\nexport class OauthService {\r\n    readonly depProviders = [\r\n        { provide: HttpClient, useValue: this.http },\r\n        { provide: PopupService, useValue: this.popup },\r\n        { provide: ConfigService, useValue: this.config },\r\n    ];\r\n    readonly deps = [HttpClient, PopupService, ConfigService];\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private shared: SharedService,\r\n        private config: ConfigService,\r\n        private popup: PopupService) { }\r\n\r\n    public authenticate<T extends object | string>(name: string, userData?: any): Observable<T> {\r\n        const provider: IOauthService = this.config.options.providers[name].oauthType === '1.0'\r\n            ? Injector.create([\r\n                ...this.depProviders,\r\n                { provide: Oauth1Service, deps: this.deps },\r\n            ]).get(Oauth1Service)\r\n            : Injector.create([\r\n                ...this.depProviders,\r\n                { provide: Oauth2Service, deps: this.deps },\r\n            ]).get(Oauth2Service);\r\n\r\n        return provider.open<T>(this.config.options.providers[name], userData || {})\r\n            .pipe(tap((response) => {\r\n                // this is for a scenario when someone wishes to opt out from\r\n                // satellizer's magic by doing authorization code exchange and\r\n                // saving a token manually.\r\n                if (this.config.options.providers[name].url) {\r\n                    this.shared.setToken(response);\r\n                }\r\n            }));\r\n    }\r\n\r\n    public unlink<T>(\r\n        provider: string,\r\n        url = joinUrl(this.config.options.baseUrl, this.config.options.unlinkUrl),\r\n        method = 'POST') {\r\n        return this.http.request<T>(method, url, { body: { provider } });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SharedService } from './shared.service';\r\nimport { ConfigService } from './config.service';\r\nimport { joinUrl } from './utils';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\n@Injectable()\r\nexport class LocalService {\r\n    constructor(\r\n        private http: HttpClient,\r\n        private shared: SharedService,\r\n        private config: ConfigService) { }\r\n\r\n    public login<T extends string | object>(user: string | object, url?: string): Observable<T> {\r\n        return this.http.post<T>(url || joinUrl(this.config.options.baseUrl, this.config.options.loginUrl), user)\r\n            .pipe(tap((data) => this.shared.setToken(data)));\r\n    }\r\n\r\n    public signup<T = any>(user: string | object, url?: string): Observable<T> {\r\n        return this.http.post<T>(url || joinUrl(this.config.options.baseUrl, this.config.options.signupUrl), user);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SharedService } from './shared.service';\r\nimport { LocalService } from './local.service';\r\nimport { OauthService } from './oauth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { StorageType } from './storage-type.enum';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    constructor(private shared: SharedService,\r\n        private local: LocalService,\r\n        private oauth: OauthService) {\r\n    }\r\n\r\n    public login<T extends string | object = any>(user: string | object, url?: string): Observable<T> {\r\n        return this.local.login<T>(user, url);\r\n    }\r\n\r\n    public signup<T = any>(user: string | object, url?: string): Observable<T> {\r\n        return this.local.signup<T>(user, url);\r\n    }\r\n\r\n    public logout(): Observable<void> {\r\n        return this.shared.logout();\r\n    }\r\n\r\n    public authenticate<T extends object | string>(name: string, userData?: any): Observable<T> {\r\n        return this.oauth.authenticate<T>(name, userData);\r\n    }\r\n\r\n    public link<T extends object | string>(name: string, userData?: any): Observable<T> {\r\n        return this.oauth.authenticate<T>(name, userData);\r\n    }\r\n\r\n    public unlink<T = any>(provider: string, url?: string): Observable<T> {\r\n        return this.oauth.unlink<T>(provider, url);\r\n    }\r\n\r\n    public isAuthenticated(): boolean {\r\n        return this.shared.isAuthenticated();\r\n    }\r\n\r\n    public getToken(): string | null {\r\n        return this.shared.getToken();\r\n    }\r\n\r\n    public setToken(token: string | object): void {\r\n        this.shared.setToken(token);\r\n    }\r\n\r\n    public removeToken(): void {\r\n        this.shared.removeToken();\r\n    }\r\n\r\n    public getPayload(): any {\r\n        return this.shared.getPayload();\r\n    }\r\n\r\n    public setStorageType(type: StorageType): boolean {\r\n        return this.shared.setStorageType(type);\r\n    }\r\n\r\n    public getExpirationDate(): Date | null {\r\n        return this.shared.getExpirationDate();\r\n    }\r\n}\r\n","import { ConfigService } from './config.service';\r\nimport { SharedService } from './shared.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(\r\n        private shared: SharedService,\r\n        private config: ConfigService,\r\n    ) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { authHeader, authToken } = this.config.options;\r\n        const token = this.shared.getToken();\r\n        const isAuthenticated = this.shared.isAuthenticated;\r\n        const newReq = isAuthenticated && !req.headers.has(authHeader)\r\n            ? req.clone({ setHeaders: { [authHeader]: `${authToken} ${token}` } })\r\n            : req;\r\n        return next.handle(newReq);\r\n    }\r\n\r\n}","/**\r\n * Created by Ron on 25/12/2015.\r\n */\r\nimport { ConfigService, IPartialConfigOptions, CONFIG_OPTIONS, IProviders, IOauth2Options, IOauth1Options } from './config.service';\r\nimport { SharedService } from './shared.service';\r\nimport { OauthService } from './oauth.service';\r\nimport { PopupService } from './popup.service';\r\nimport { Oauth1Service } from './oauth1.service';\r\nimport { Oauth2Service } from './oauth2.service';\r\nimport { LocalService } from './local.service';\r\nimport { AuthService } from './auth.service';\r\nimport { JwtInterceptor } from './interceptor.service';\r\nimport { StorageService, BrowserStorageService } from './storage.service';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { StorageType } from './storage-type.enum';\r\n\r\n@NgModule({ imports: [HttpClientModule] })\r\nexport class Ng2UiAuthModule {\r\n    static forRoot(configOptions?: IPartialConfigOptions, defaultJwtInterceptor = true): ModuleWithProviders {\r\n        return {\r\n            ngModule: Ng2UiAuthModule,\r\n            providers: [\r\n                ...configOptions ? [{ provide: CONFIG_OPTIONS, useValue: configOptions }] : [],\r\n                { provide: ConfigService, useClass: ConfigService, deps: [CONFIG_OPTIONS] },\r\n                { provide: StorageService, useClass: BrowserStorageService, deps: [ConfigService] },\r\n                { provide: SharedService, useClass: SharedService, deps: [StorageService, ConfigService] },\r\n                ...defaultJwtInterceptor ? [{ provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true, deps: [SharedService, ConfigService] }] : [],\r\n                { provide: OauthService, useClass: OauthService, deps: [HttpClient, SharedService, ConfigService, PopupService] },\r\n                { provide: PopupService, useClass: PopupService, deps: [ConfigService] },\r\n                { provide: LocalService, useClass: LocalService, deps: [HttpClient, SharedService, ConfigService] },\r\n                { provide: AuthService, useClass: AuthService, deps: [SharedService, LocalService, OauthService] },\r\n            ],\r\n        };\r\n    }\r\n}\r\n\r\nexport {\r\n    LocalService,\r\n    Oauth2Service,\r\n    Oauth1Service,\r\n    PopupService,\r\n    OauthService,\r\n    SharedService,\r\n    StorageService, BrowserStorageService,\r\n    AuthService,\r\n    ConfigService, IPartialConfigOptions,\r\n    JwtInterceptor,\r\n    CONFIG_OPTIONS,\r\n    IProviders,\r\n    IOauth2Options,\r\n    IOauth1Options,\r\n    StorageType,\r\n};"],"names":["tslib_1.__assign","tslib_1.__extends","tslib_1.__spread"],"mappings":"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"}
